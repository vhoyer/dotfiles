[user]
	name = VinÃ­cius Hoyer
	email = vhoyer@live.com
[core]
	autocrlf = input
	safecrlf = warn
	editor = nvim
	excludesfile = ~/.ggitignore
[alias]
	ad = add -p
	adog = log --all --decorate --oneline --graph
	ch = checkout
	co = commit
	cp = cherry-pick
	d = diff
	ds = diff --staged
	dw = diff --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
	f = fetch -p
	fix = "!nvim `git diff --name-only --diff-filter=U`"
	fuck = commit --amend
	hist = log --graph --decorate --pretty=oneline --abbrev-commit --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	lop = log --decorate --pretty=oneline --abbrev-commit --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	mup = !git checkout master && git pull && git checkout -
	pow = push origin HEAD -u
	powf = push origin HEAD -u --force-with-lease
	s = status
	wp = rebase --continue
	back = checkout HEAD~
	next = "!git checkout $(git rev-list --topo-order HEAD..master | tail -1)"
	clear-local-branches = "!clb() { echo Executing 'it remote prune origin' && git remote prune origin && echo Finding merged branchs && git branch --merged | grep \"master\\|next-release\\|$(git rev-parse --abbrev-ref HEAD)\" -v >/tmp/merged-branches && vim /tmp/merged-branches && xargs git branch -d </tmp/merged-branches;}; clb"
	clb = clear-local-branches
	pull-preview = "!gitpullpreview() { echo Fetching new changes... && git fetch --prune && git log -p ...@{u}; }; gitpullpreview"
	pull-diff = "!gitpulldiff() { echo Fetching new changes... && git fetch --prune && git diff ...@{u}; }; gitpulldiff"
	pp = pull-preview
	pd = pull-diff
	c = "!gitmoji -c"
[push]
	default = simple
[credetial]
	helper=store
[pager]
	log = gitmoji-log | less --tabs=4 -rFX
[rerere]
	enabled = true
